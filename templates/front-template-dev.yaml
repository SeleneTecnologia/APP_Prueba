apiVersion: template.openshift.io/v1
kind: Template
labels:
  demo: ${APP_NAME}-template
metadata:
  annotations:
    description: portal omnidata
    iconClass: java
    tags: angular
  name: ${APP_NAME}-template
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: ${APP_NAME}
      labels:
        application: ${APP_NAME}
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
        app.kubernetes.io/name: ${APP_NAME}
    spec:
      tags:
        - name: ${TAG}
          annotations:
            openshift.io/generated-by: OpenShiftWebConsole
            openshift.io/imported-from: ${GITLAB_REGISTRY}:${TAG}
          from:
            kind: DockerImage
            name: ${GITLAB_REGISTRY}:${TAG}
          generation: 2
          importPolicy:
            insecure: true
          referencePolicy:
            type: Local
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
        name: ${APP_NAME}
        namespace: ${NAME_SPACE}
        labels:
          application: ${APP_NAME}
          app.kubernetes.io/part-of: ${APP_GROUP}
    spec:
      selector:
          matchLabels:
            application: ${APP_NAME}
      replicates: 1
      template:
          metadata:
            labels:
              application: ${APP_NAME}
          spec:
            containers:
              - name: ${APP_NAME}
                image: "image-registry.openshift-image-registry.svc:5000/${NAME_SPACE}/${APP_NAME}:${TAG}"
                envFrom:
                  - secretRef:
                      name: 3scale-keys
                  - configMapRef:
                      name: endpoint-config
                ports:
                  - containerPort: 8080        
                resources:
                  limits:
                    cpu: ${LIMIT_CPU}
                    memory: ${LIMIT_MEMORY}
                  requests:
                    cpu: ${REQUEST_CPU}
                    memory: ${REQUEST_MEMORY}
            nodeSelector:
              ambientes.ocp.coordinador.cl/dev: 'true'
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        application: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
      - name: '8080'
        port: 8080
        protocol: TCP
        targetPort: 8080 
      selector:
        application: ${APP_NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        application: ${APP_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: 180s  
      name: ${APP_NAME}
    spec:
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      port:
        targetPort: '8080'
      tls:
        termination: edge
      wildcardPolicy: None
parameters:
  - displayName: Gitlab Registry
    name: GITLAB_REGISTRY
    required: true
  - displayName: Application name
    name: APP_NAME
    required: true
  - description: Agrupaci√≥n de aplicativos
    displayName: APP_GROUP
    name: APP_GROUP
  - description: Namespace environment
    displayName: namespace
    name: NAME_SPACE
  - displayName: Domain name
    name: DOMAIN
    required: true
    value: apps.prod-os-1.coordinador.cl
  - description: Limit size for Pod's CPU
    displayName: LimitPodCpu
    name: LIMIT_CPU
    value: 100m
  - description: Limit size for Pod's RAM
    displayName: LimitPodRam
    name: LIMIT_MEMORY
    value: 265Mi
  - description: Request size for Pod's CPU
    displayName: RequestPodCpu
    name: REQUEST_CPU
    value: 50m
  - description: Request size for Pod's RAM
    displayName: RequestPodRam
    name: REQUEST_MEMORY
    value: 265Mi
  - description: Tag Version
    displayName: TagVersion
    name: TAG
    required: true